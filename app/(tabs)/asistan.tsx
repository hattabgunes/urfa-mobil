import React, { useRef, useState } from 'react';
import { Dimensions, FlatList, FlatList as FlatListType, Image, KeyboardAvoidingView, ListRenderItem, Platform, StatusBar, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native';

const COLORS = {
  user: '#FFD600', // SarÄ±
  assistant: '#43A047', // YeÅŸil
  background: '#F9FBE7',
  inputBg: '#FFFDE7',
  border: '#C5E1A5',
  sendBtn: '#FFD600',
};

const dummyAnswers = [
  'ÅžanlÄ±urfa, BalÄ±klÄ±gÃ¶l ile Ã¼nlÃ¼dÃ¼r.',
  'Urfa mutfaÄŸÄ± kebaplarÄ±yla meÅŸhurdur.',
  'GÃ¶beklitepe, dÃ¼nyanÄ±n en eski tapÄ±naklarÄ±ndan biridir ve Urfaâ€™dadÄ±r.',
  'Urfaâ€™da her yÄ±l sÄ±ra geceleri dÃ¼zenlenir.',
  'Daha fazla bilgi iÃ§in tekrar sorabilirsiniz!'
];

export default function Asistan() {
  const [messages, setMessages] = useState([
    { from: 'assistant', text: 'Merhaba! ÅžanlÄ±urfa hakkÄ±nda ne Ã¶ÄŸrenmek istersiniz?' }
  ]);
  const [input, setInput] = useState('');
  const flatListRef = useRef<FlatListType<any>>(null);

  // Dummy cevaplar yerine anahtar kelimeye gÃ¶re cevap fonksiyonu
  function getUrfaAnswer(message: string) {
    const msg = message.toLowerCase();
    // GÃ¶beklitepe
    if (msg.includes('gÃ¶beklitepe')) {
      if (msg.includes('tarih')) {
        return 'GÃ¶beklitepe, M.Ã–. 9600-9500 yÄ±llarÄ±na tarihlenen ve dÃ¼nyanÄ±n bilinen en eski tapÄ±nak kompleksi olarak kabul edilen bir arkeolojik alanÄ±dÄ±r. 2018 yÄ±lÄ±nda UNESCO DÃ¼nya MirasÄ± Listesiâ€™ne alÄ±nmÄ±ÅŸtÄ±r ve insanlÄ±k tarihinin en eski ibadet merkezi olarak bÃ¼yÃ¼k Ã¶neme sahiptir.';
      }
      if (msg.includes('konum')) {
        return 'GÃ¶beklitepeâ€™nin konumunu Urfa Mobil haritalardan bakabilirsiniz.';
      }
      return 'GÃ¶beklitepe, dÃ¼nyanÄ±n en eski tapÄ±naklarÄ±ndan biridir ve ÅžanlÄ±urfaâ€™dadÄ±r.';
    }
    // Urfa Kalesi
    if (msg.includes('urfa kalesi') || msg.includes('ÅŸanlÄ±urfa kalesi')) {
      if (msg.includes('tarih')) {
        return 'Urfa Kalesi, milattan Ã¶nce 2. yÃ¼zyÄ±la kadar uzanan bir geÃ§miÅŸe sahiptir. Kale, Roma, Bizans ve Ä°slam dÃ¶nemlerinde Ã§eÅŸitli eklemelerle bugÃ¼nkÃ¼ halini almÄ±ÅŸtÄ±r. ÅžanlÄ±urfa ÅŸehir merkezinin gÃ¼neyinde, yÃ¼ksek bir tepe Ã¼zerinde yer alÄ±r.';
      }
      if (msg.includes('konum')) {
        return 'Urfa Kalesiâ€™nin konumunu Urfa Mobil haritalardan bakabilirsiniz.';
      }
      return 'Urfa Kalesi, ÅžanlÄ±urfa ÅŸehir merkezinde tarihi bir yapÄ±dÄ±r ve ÅŸehrin simgelerindendir.';
    }
    // BalÄ±klÄ±gÃ¶l
    if (msg.includes('balÄ±klÄ±gÃ¶l') || msg.includes('balÄ±klÄ± gÃ¶l')) {
      if (msg.includes('tarih')) {
        return 'BalÄ±klÄ±gÃ¶l, Ä°slam inancÄ±na gÃ¶re Hz. Ä°brahimâ€™in ateÅŸe atÄ±ldÄ±ÄŸÄ± ve ateÅŸin suya, odunlarÄ±n ise balÄ±ÄŸa dÃ¶nÃ¼ÅŸtÃ¼ÄŸÃ¼ yer olarak bilinir. ÅžanlÄ±urfaâ€™nÄ±n en Ã¶nemli ve kutsal mekanlarÄ±ndan biridir.';
      }
      if (msg.includes('konum')) {
        return 'BalÄ±klÄ±gÃ¶lâ€™Ã¼n konumunu Urfa Mobil haritalardan bakabilirsin.';
      }
      return 'BalÄ±klÄ±gÃ¶l, ÅžanlÄ±urfaâ€™nÄ±n en Ã¼nlÃ¼ ve kutsal mekanlarÄ±ndan biridir.';
    }
    // Merhaba veya selam
    if (msg.includes('merhaba') || msg.includes('selam')) {
      return 'Merhaba! Size nasÄ±l yardÄ±mcÄ± olabilirim? ðŸ™‚';
    }
    // Genel cevap
    return 'Sadece ÅžanlÄ±urfa ile ilgili sorularÄ± cevaplayabilirim.';
  }

  const handleSend = () => {
    if (!input.trim()) return;
    const userMessage = { from: 'user', text: input };
    setMessages(prev => [...prev, userMessage]);
    setInput('');
    setTimeout(() => {
      const answer = getUrfaAnswer(userMessage.text);
      setMessages(prev => [...prev, { from: 'assistant', text: answer }]);
      flatListRef.current?.scrollToEnd({ animated: true });
    }, 700);
  };

  const handleClear = () => {
    setMessages([
      { from: 'assistant', text: 'Merhaba! ÅžanlÄ±urfa hakkÄ±nda ne Ã¶ÄŸrenmek istersiniz?' }
    ]);
  };

  const renderItem: ListRenderItem<{ from: string; text: string }> = ({ item }) => (
    <View style={[styles.bubble, item.from === 'user' ? styles.userBubble : styles.assistantBubble]}>
      <Text style={styles.bubbleText}>{item.text}</Text>
    </View>
  );

  const { width, height } = Dimensions.get('window');

  return (
    <KeyboardAvoidingView style={styles.container} behavior={Platform.OS === 'ios' ? 'padding' : undefined}>
      <View style={styles.header}>
        <Text style={styles.headerText}>Urfa Mobil Asistan</Text>
      </View>
      <View style={styles.backgroundImageWrapper} pointerEvents="none">
        <Image
          source={require('../../assets/images/biber.jpg')}
          style={styles.backgroundImage}
          resizeMode="contain"
        />
      </View>
      <FlatList
        ref={flatListRef}
        data={messages}
        renderItem={renderItem}
        keyExtractor={(_, i) => i.toString()}
        contentContainerStyle={styles.chatArea}
        onContentSizeChange={() => flatListRef.current?.scrollToEnd({ animated: true })}
      />
      <View style={styles.inputArea}>
        <TextInput
          style={styles.input}
          value={input}
          onChangeText={setInput}
          placeholder="ÅžanlÄ±urfa hakkÄ±nda bir soru sorun..."
          placeholderTextColor="#A5A5A5"
          onSubmitEditing={handleSend}
          returnKeyType="send"
        />
        <TouchableOpacity style={styles.sendBtn} onPress={handleSend}>
          <Text style={{ color: '#333', fontWeight: 'bold', fontSize: 16 }}>GÃ¶nder</Text>
        </TouchableOpacity>
        <TouchableOpacity style={styles.clearBtn} onPress={handleClear}>
          <Text style={{ color: '#fff', fontWeight: 'bold', fontSize: 14 }}>Temizle</Text>
        </TouchableOpacity>
      </View>
    </KeyboardAvoidingView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: COLORS.background,
  },
  header: {
    width: '100%',
    backgroundColor: COLORS.user,
    paddingTop: Platform.OS === 'ios' ? 36 : StatusBar.currentHeight || 16,
    paddingBottom: 20,
    alignItems: 'center',
    justifyContent: 'center',
    borderBottomWidth: 2,
    borderBottomColor: COLORS.assistant,
    zIndex: 10,
    flexDirection: 'row',
  },
  headerText: {
    color: COLORS.assistant,
    fontSize: 26,
    fontWeight: 'bold',
    letterSpacing: 1,
    flex: 1,
    textAlign: 'center',
  },
  backgroundImageWrapper: {
    ...StyleSheet.absoluteFillObject,
    alignItems: 'center',
    justifyContent: 'center',
    zIndex: 0,
  },
  backgroundImage: {
    width: Dimensions.get('window').width * 0.8,
    height: Dimensions.get('window').height * 0.5,
    opacity: 0.13,
  },
  chatArea: {
    padding: 16,
    paddingBottom: 8,
    zIndex: 1,
  },
  bubble: {
    maxWidth: '80%',
    padding: 12,
    marginVertical: 6,
    borderRadius: 18,
    shadowColor: '#000',
    shadowOpacity: 0.05,
    shadowRadius: 4,
    shadowOffset: { width: 0, height: 2 },
  },
  userBubble: {
    alignSelf: 'flex-end',
    backgroundColor: COLORS.user,
    borderTopRightRadius: 4,
  },
  assistantBubble: {
    alignSelf: 'flex-start',
    backgroundColor: COLORS.assistant,
    borderTopLeftRadius: 4,
  },
  bubbleText: {
    color: '#222',
    fontSize: 16,
  },
  inputArea: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: COLORS.inputBg,
    padding: 8,
    borderTopWidth: 1,
    borderColor: COLORS.border,
    marginBottom: 18, // YazÄ± yazma alanÄ±nÄ± biraz yukarÄ±ya almak iÃ§in
    zIndex: 2,
  },
  input: {
    flex: 1,
    backgroundColor: '#fff',
    borderRadius: 16,
    paddingHorizontal: 16,
    paddingVertical: 10,
    fontSize: 16,
    marginRight: 8,
    borderWidth: 1,
    borderColor: COLORS.border,
  },
  sendBtn: {
    backgroundColor: COLORS.sendBtn,
    paddingHorizontal: 18,
    paddingVertical: 10,
    borderRadius: 16,
  },
  clearBtn: {
    backgroundColor: COLORS.assistant,
    paddingHorizontal: 14,
    paddingVertical: 10,
    borderRadius: 16,
    marginLeft: 6,
  },
}); 